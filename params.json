{"name":"Yam","tagline":"The official Yammer Ruby gem","body":"Yam\r\n=============\r\n\r\n[![Gem Version](https://badge.fury.io/rb/yam.png)](http://badge.fury.io/rb/yam)\r\n[![Build Status](https://travis-ci.org/yammer/yam.png?branch=master)](https://travis-ci.org/yammer/yam)\r\n[![Coverage Status](https://coveralls.io/repos/yammer/yam/badge.png)](https://coveralls.io/r/yammer/yam)\r\n[![Code Climate](https://codeclimate.com/github/yammer/yam.png)](https://codeclimate.com/github/yammer/yam)\r\n\r\n\r\nA Yammer Ruby gem\r\n\r\n## Documentation\r\n\r\nThis README provides only a basic overview of how to use this gem.For more information about the API endpoints and helper methods available, look at the rdoc documentation.\r\n\r\n[http://rdoc.info/github/yammer/yam][documentation]\r\n\r\n[documentation]: http://rdoc.info/github/yammer/yam/index \r\n\r\n\r\n## Installation\r\n\r\nAdd this line to your application's Gemfile:\r\n\r\n```ruby\r\ngem 'yam'\r\n```\r\n\r\nAnd then execute:\r\n\r\n```sh\r\n$ bundle\r\n```\r\n\r\nOr install it yourself as:\r\n\r\n```sh\r\n$ gem install yam\r\n```\r\n\r\n## Configuration\r\n\r\nThe Yammer API requires authentication for access to certain endpoints. Below are the basic steps to get this done.\r\n\r\n### Register your application\r\n\r\nSetup a Yammer client application as described on the [Yammer Developer site](https://developer.yammer.com/introduction/)\r\n\r\n### Obtaining an access token\r\n\r\n1. Construct the following URL using the client_id you received `https://www.yammer.com/dialog/oauth?client_id=[:client_id]`\r\n\r\n2. Have your users follow the URL you constructed above to allow your application to access their data \r\n\r\n3. After allowing access, your users will be redirected to your callback URL `http://[:redirect_uri]?code=[:code]`\r\n\r\n4. Exchange the code for an access token by making an HTTP GET request to `https://www.yammer.com/oauth2/access_token.json?client_id=[:client_id]&client_secret=[:client_secret]&code=[:code]`\r\n\r\n5. The authorization server will respond with an access token\r\n\r\n```ruby\r\n\"access_token\": {\r\n  ...\r\n  \"token\": \"abcxyz12345\",\r\n  ...\r\n}\r\n```\r\n\r\n### Configuring yammer-client\r\n\r\nTo view the current state of the client use the `options` method\r\n\r\n```ruby\r\nrequire 'yammer'\r\n\r\nYammer.options\r\n#> {:site_url=>\"https://www.yammer.com\", :client_id=>nil, :client_secret=>nil, :access_token=>nil, :http_adapter=>Yammer::Connection, :connection_options=>{:max_redirects=>5, :use_ssl=>true}} \r\n```\r\n\r\nYou may change this configuration by using the `configure` method\r\n\r\n```ruby\r\nYammer.configure do |c|\r\n  c.client_id = '[client_id]'\r\n  c.client_secret = '[client_secret]'\r\nend\r\n#> Yammer \r\n```\r\n\r\nAt this point, your new settings will take effect.\r\n\r\n```ruby\r\nYammer.options\r\n#> {:site_url=>\"https://www.yammer.com\", :client_id=>'[client_id]', :client_secret=>'[client_secret]', :access_token=>nil, :http_adapter=>Yammer::Connection, :connection_options=>{ :max_redirects=>5, :use_ssl=>true }} \r\n```\r\nTake note of the fact that the `access_token` is nil. This will need to be set and, in the next section, we will see how to do this.\r\n\r\n## Usage\r\n\r\n- This gem offers three ways to interact Yammer's API:\r\n  - Calling methods on the Yammer i.e `Yammer`\r\n  - Calling methods on an instance of `Yammer::Client`.\r\n  - Calling methods on the custom object models (Experimental)\r\n\r\n### Calling methods on the Yammer module \r\nIn order for this to work, you will need to set up your access_token. This assumes that you already configured the client with your default options as was described above.\r\n\r\n ```ruby\r\n# set up your access token\r\nYammer.configure do |c|\r\n  c.access_token = '[access_token]'\r\nend\r\n#=> <Yammer: {:http_adapter=>Yammer::HttpAdapter, :client_secret=>\"[client_secret]\", :access_token=>\"[access_token]\", :site_url=>\"https://www.yammer.com\", :connection_options=>{:max_redirects=>5, :verify_ssl=>true}, :default_headers=>{\"Accept\"=>\"application/json\", \"User-Agent\"=>\"Yammer Ruby Gem 0.1.8\"}, :client_id=>\"[client_id]\"}>\r\n\r\n# get the current user\r\nYammer.current_user\r\n```\r\n\r\n### Calling methods on an instance of Yammer::Client\r\nNOTE: Use this if you wish to create multiple client instances with diffrent client_id, client_secret and access token.\r\nIf your application uses a signle pair of client_id and client_secret credentials, you ONLY need to sepecify the access token \r\n\r\n- Create an instance of the Yammer client\r\n\r\n```ruby\r\n# create a client instance using the access token: HqsKG3ka9Uls2DxahNi78A\r\nyamr = Yammer::Client.new(:access_token  => 'HqsKG3ka9Uls2DxahNi78A')\r\n\r\n\r\n# create multiple clients, each using a different access token\r\nclient1 = Yammer::Client.new(:access_token  => 'fG4mhFDf2GUUptztU0Qo9g')\r\n\r\nclient2 = Yammer::Client.new(:access_token  => 'ruZy4vFYyTWqnx7adO9ow')\r\n\r\n```\r\n\r\n- Call methods on the instance:\r\n\r\n  - **User**\r\n\r\n    - *find a user by email*\r\n\r\n    ```ruby\r\n    yamr.get_user_by_email('user@example.com')\r\n    #<Yammer::ApiResponse:0x007fb949434ec8 @headers=#<Net::HTTPOK 200 OK readbody=true>, @body=\"[JSON Response]\", @code=200>\r\n    ```\r\n\r\n    - *find a user by user id*\r\n\r\n    ```ruby\r\n    yamr.get_user('1588')\r\n    #<Yammer::ApiResponse:0x007fb949434ec8 @headers=#<Net::HTTPOK 200 OK readbody=true>, @body=\"[JSON Response]\", @code=200>\r\n    ```\r\n\r\n    - *get the current user*\r\n\r\n    ```ruby\r\n    yamr.current_user\r\n    #<Yammer::ApiResponse:0x007fb949434ec8 @headers=#<Net::HTTPOK 200 OK readbody=true>, @body=\"[JSON Response]\", @code=200>\r\n    ```\r\n\r\n  - **Message**\r\n\r\n    - *post a update as the current user*\r\n\r\n    ```ruby\r\n    yamr.create_message('status update')\r\n    #<Yammer::ApiResponse:0x007fb949434ec8 @headers=#<Net::HTTPOK 200 OK readbody=true>, @body=\"[JSON Response]\", @code=200>\r\n    ```\r\n\r\n    - *send a private message to another Yammer user*\r\n\r\n    ```ruby\r\n    yamr.create_message('private message', :direct_to_id => 24)\r\n    #<Yammer::ApiResponse:0x007fb949434ec8 @headers=#<Net::HTTPOK 200 OK readbody=true>, @body=\"[JSON Response]\", @code=200>\r\n    ```\r\n\r\n    - *send a message with an Open Graph Object as an attachment*\r\n\r\n    ```ruby\r\n    yamr.create_message('here is my open graph object', :og_url => \"https://www.yammer.com/example/graph/31415926\")\r\n    #<Yammer::ApiResponse:0x007fb949434ec8 @headers=#<Net::HTTPOK 200 OK readbody=true>, @body=\"[JSON Response]\", @code=200>\r\n    ```\r\n\r\n\r\n  - **Search**\r\n\r\n    - *search for a term within the context of current user*\r\n\r\n    ```ruby\r\n    yamr.search(:search => 'thekev', :model_types => 'users;groups')\r\n    #<Yammer::ApiResponse:0x007fb949434ec8 @headers=#<Net::HTTPOK 200 OK readbody=true>, @body=\"[JSON Response]\", @code=200>\r\n    ```\r\n\r\n  - **Thread**\r\n\r\n    - *fetch a thread with a given id*\r\n\r\n    ```ruby\r\n    yamr.get_thread(42)\r\n    #<Yammer::ApiResponse:0x007fb949434ec8 @headers=#<Net::HTTPOK 200 OK readbody=true>, @body=\"[JSON Response]\", @code=200>\r\n    ```\r\n\r\n  - **Activity**\r\n\r\n    - *create and post an activity*\r\n\r\n    ```ruby\r\n    yamr.create_activity(\r\n      activity: {\r\n        actor: {\r\n          name: 'John Doe',\r\n          email: 'jdoe@yammer-inc.com'\r\n        },\r\n        action: 'create',\r\n        object: {\r\n          url: 'www.example.com',\r\n          title: 'Example event name',\r\n        },\r\n        message: 'Posting activity',\r\n        users: [{\r\n          name: 'Example Invitee',\r\n          email: 'example@yammer-inc.com'\r\n        }]\r\n      }\r\n    )\r\n    #<Yammer::ApiResponse:0x007fb949434ec8 @headers=#<Net::HTTPOK 200 OK readbody=true>, @body=\"[JSON Response]\", @code=200>\r\n    ```\r\n\r\n\r\n### Using the object models (Experimental)\r\n\r\nThe object model is an abstraction that makes it easy to manipulate the JSON data return when accessing Yammer's API. Each model has accessor methods for all keys contained in the JSON response for a given model type. \r\n\r\n\r\n  - **User**\r\n\r\n    - *get the current user*\r\n\r\n\r\n    ```ruby\r\n    u = Yammer::User.current\r\n    #> <Yammer::User:0x007f9f4b0c39c8>\r\n\r\n    u.full_name\r\n    #> 'Kevin Mutyaba'\r\n\r\n    u.update!(:job_title => 'k0dR')\r\n    ```\r\n\r\n\r\n  - **Thread**\r\n\r\n    - *fetch a thread with a given id*\r\n\r\n    ```ruby\r\n    t = Yammer::Thread.get(3)\r\n    ```\r\n\r\n    View the participants in the thread\r\n\r\n    ```ruby\r\n    parts = t.participants\r\n    #> [{:type=>\"user\", :id=>18}, {:type=>\"user\", :id=>64}]\r\n    ```\r\n\r\n    View the participants in the thread as user object models\r\n\r\n    ```ruby\r\n    peepl = t.people\r\n    #> [#<Yammer::User:0x007f9f4c086630 @modified_attributes={}, @attrs={}, @new_record=false, @id=18>, #<Yammer::User:0x007f9f4c086568 @modified_attributes={}, @attrs={}, @new_record=false, @id=64>] \r\n    ```\r\n\r\n    Object models are lazyly loaded. Calling an accessor on a model will hydrate it\r\n\r\n    ```ruby\r\n    peepl[0]\r\n    #> #<Yammer::User:0x007f9f4c086568 @modified_attributes={}, @attrs={}, @new_record=false, @id=18> \r\n\r\n    peepl[0].permalink\r\n    #> 'thekev'\r\n\r\n    peepl[0]\r\n    #=> #<Yammer::User:0x007f9f4c086568 @modified_attributes={}, @attrs={:last_name=>\"Mutyaba\", :network_id=>1, :first_name=>\"Kevin\", :id => 18,  :permalink=>\"thekev\" }, @network_id=1, @first_name=\"Kev\", @full_name=\"Tiaba\", @permalink=\"thekev\", @id=18 > \r\n    ```\r\n\r\n## Supported Ruby Versions\r\nThis library aims to support and is [tested against][travis] the following Ruby\r\nversion:\r\n\r\n* Ruby 1.8.7\r\n* Ruby 1.9.2\r\n* Ruby 1.9.3\r\n* Ruby 2.0.0\r\n\r\nThis library may inadvertently work (or seem to work) on other Ruby\r\nimplementations, however support will only be provided for the versions listed\r\nabove.\r\n\r\n## Copyright\r\nCopyright (c) 2013 Microsoft Corporation\r\nSee [LICENSE][license] for details.\r\n[license]: https://github.com/tiabas/yammer-client/blob/master/LICENSE.md\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}